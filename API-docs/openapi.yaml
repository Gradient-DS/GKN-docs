openapi: 3.0.0
info:
  title: Vector Search API for GKN
  version: 1.0.0
  description: API for retrieving documents relevant to a given query using a FAISS vector database build from the original GKN dataset.

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "Invalid or missing API key"
    BadRequestError:
      description: Invalid input or missing required fields
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                examples:
                  missing_question:
                    value: "The 'question' field is required."
                  invalid_alpha_type:
                    value: "The 'hybrid_search_alpha' field must be a number."
                  invalid_alpha_range:
                    value: "The 'hybrid_search_alpha' field must be between 0.0 and 1.0."
                  invalid_cutoff_type:
                    value: "The 'search_relevance_cutoff' field must be a number."
                  invalid_cutoff_range:
                    value: "The 'search_relevance_cutoff' field must be between 0.0 and 1.0."
                  invalid_deduplicate_type:
                    value: "The 'deduplicate' field must be a boolean."
                  invalid_max_duplicates_type:
                    value: "The 'max_duplicates' field must be an integer."
                  invalid_max_duplicates_value:
                    value: "The 'max_duplicates' field must be a positive integer."
                  invalid_max_duplicates_usage:
                    value: "The 'max_duplicates' field can only be used when 'deduplicate' is false."
    InternalServerError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "An unexpected error occurred."

paths:
  /search:
    post:
      summary: Search documents based on a question
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["question"]
              properties:
                question:
                  type: string
                  example: "Wat is het stikstofbeleid in Nederland?"
                  description: "The search query or question to find relevant documents for"
                doc_ids:
                  type: array
                  items:
                    type: integer
                  example: [12345, 67890]
                  description: "Optional. Array of document IDs to filter results. Only chunks from these documents will be returned. Document IDs must be integers. If not provided, all documents will be searched."
                hybrid_search_alpha:
                  type: number
                  format: float
                  minimum: 0.0
                  maximum: 1.0
                  example: 0.4
                  description: "Optional. Balance between vector search (1.0) and keyword search (0.0). Higher values favor semantic similarity, lower values favor exact keyword matches. Default: 0.4"
                search_relevance_cutoff:
                  type: number
                  format: float
                  minimum: 0.0
                  maximum: 1.0
                  example: 0.15
                  description: "Optional. Minimum relevance score threshold for results to be included. Results with scores below this threshold will be filtered out. Default: 0.15"
                deduplicate:
                  type: boolean
                  example: true
                  description: "Optional. Whether to merge duplicate results with the same ID, title, or URL. When true, duplicates are merged and page numbers are combined. When false, duplicates are kept separate. Default: true"
                max_duplicates:
                  type: integer
                  minimum: 1
                  example: 5
                  description: "Optional. Maximum number of results with the same ID, title, or URL to return. Can only be used when 'deduplicate' is false. If not specified when deduplicate=false, all duplicates will be returned."
      responses:
        '200':
          description: A list of relevant documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: string
                    example: "46188"
                  start:
                    type: string
                    example: "0"
                  records-per-page:
                    type: string
                    example: "50"
                  filtered_by_doc_ids:
                    type: array
                    items:
                      type: integer
                    example: [12345, 67890]
                    description: "Array of document IDs that were used to filter the results. Only present when doc_ids parameter was provided."
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 989398
                        links:
                          type: array
                          items:
                            type: object
                            properties:
                              filetype:
                                type: string
                                example: "PDF"
                              url:
                                type: string
                                format: uri
                                example: "https://edepot.wur.nl/510048"
                              access:
                                type: string
                                example: "public"
                        access:
                          type: string
                          example: "public"
                          description: "Access level of the document"
                        descriptionDUT:
                          type: string
                          description: "Description in Dutch"
                        title:
                          type: string
                          description: "Title of the document"
                        publisher:
                          type: string
                          description: "Publisher of the document"
                        year:
                          type: string
                          description: "Publication year"
                        contentsubtype:
                          type: string
                          description: "Content subtype classification"
                        theme:
                          type: array
                          items:
                            type: string
                          example: ["GKN_KRINGLOOPLANDBOUW"]
                          description: "Thematic categories"
                        keyword:
                          type: array
                          items:
                            type: string
                          example: ["stikstof", "kringlooplandbouw"]
                          description: "Keywords associated with the document"
                        journal:
                          type: string
                          description: "Journal name if applicable"
                        relevance_score:
                          type: number
                          format: float
                          example: 0.7234
                          description: "Relevance score from the search algorithm"
                        chunk_content:
                          type: string
                          description: "Content of the document chunk that matched the search"
                        total_page_count:
                          type: integer
                          example: 45
                          description: "Total number of pages in the document"
                        source_page_numbers:
                          type: array
                          items:
                            type: integer
                          example: [12, 13, 14]
                          description: "Page numbers where the relevant content was found"
                        start_page:
                          type: integer
                          example: 12
                          description: "Starting page number of the relevant content"
                        merged_from_chunks:
                          type: integer
                          example: 3
                          description: "Number of chunks that were merged to create this result"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
